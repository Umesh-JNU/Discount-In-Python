Timer unit: 1e-07 s

Total time: 133.743 s
File: <ipython-input-10-6d5f82072807>
Function: countKmers at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           def countKmers(k: int, inputFile: str, bucket: str):
    12         1         48.0     48.0      0.0      if not inputFile.endswith('.txt'):
    13                                                   raise DiscountCustomError("FileFormatError : required .txt file", inputFile.split('/')[-1], "XXX.txt")
    14                                               else:
    15         1         23.0     23.0      0.0          try:
    16         1         37.0     37.0      0.0              path = bucket.rsplit('/', 1)[0]
    17         1       3395.0   3395.0      0.0              print(path)
    18         1       9688.0   9688.0      0.0              os.mkdir(bucket.rsplit('/', 1)[0])
    19                                                   except OSError:
    20                                                       pass
    21                                               
    22         1    5584158.0 5584158.0      0.4      with open(inputFile) as f:
    23         1        103.0    103.0      0.0          lines = map(lambda _: _.rstrip('\n').split('\t'), f)
    24                                                   
    25         1      10534.0  10534.0      0.0          print(bucket)
    26         1      11498.0  11498.0      0.0          with open(bucket, 'w+') as f:
    27    586007   13668040.0     23.3      1.0              for minimizer, thisBin in groupby(lines, lambda _: _[0]):
    28    586006   16231304.0     27.7      1.2                  supermersThisBin = map(lambda _: _[1], thisBin)
    29                                           
    30    586006   17286314.0     29.5      1.3                  slide = map(lambda sm: sliding(sm, k), supermersThisBin)
    31    586006   20514464.0     35.0      1.5                  flat = flatten(slide)
    32    586006  196666140.0    335.6     14.7                  kmers = iter(sorted(flat))
    33                                           
    34                                                           # kmers = sorted(flat)
    35                                                           # print(minimizer, kmers)
    36                                           
    37    586006   13779448.0     23.5      1.0                  last = next(kmers)
    38    586006   11239588.0     19.2      0.8                  count = 1
    39                                           
    40   7380559  143260203.0     19.4     10.7                  for _ in kmers:
    41   6794553  139044157.0     20.5     10.4                      if _ == last:
    42     96667    1988961.0     20.6      0.1                          count += 1
    43                                                               else:
    44   6697886  456416825.0     68.1     34.1                          f.write(f'{last}\t{count}\n')
    45   6697886  132744616.0     19.8      9.9                          last = _
    46   6697886  128808942.0     19.2      9.6                          count = 1
    47                                           
    48    586006   40165026.0     68.5      3.0                  f.write(f'{last}\t{count}\n')